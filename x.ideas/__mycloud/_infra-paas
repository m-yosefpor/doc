##########################
Golang code:
Test files:
Container image: Dockerfile
Package: Helm
CI:
---
workload:
    run: deployment, sts, rollouts(ro) (with ref), ds(admin)
    batch: cj, (volcano)
    autoscale: hpa, vpa -> faas maybe help on this
    configure: cm, agesecret/agekey, secret??
    resiliency: pdb (admin) -> operator
network:
    l4: svc, externalService (virtualService??)
    http: httpproxy / ingress(standard in helms)?? (gateway???, smi???)
    multi-region/dns: gslb, DNS?
    CDN: annotation on httpproxy??
    netpol: netpol, cnp

storage:
    volume:
        PersistentVolumeClaim
        VolumeSnapshot
        VolumeSnapshotGroup
    s3:
        S3UserClaim (s3u)
        S3Bucket (s3b)
    operated-db:
        pg:
            postgresclusters:
        mysql: #??
        es:
            es:
            kb:
            esa: ??
        redis:
            redis:
            redisclusters:
        mongo: #??
        tidb: #??
    oci-registry:
        is:
        istag:
    db:
        sql: create only a CR, and jump to use sql.teh-1.snappcloud.io #??
        kv: create only a CR, and jump to use kv.teh-1.snappcloud.io #??
        kv-cache: same
operated-mq:
    rabbitmq:
        rabbitmqcluster(rmq):
    kafka:
        kafkas (k)
        kafkatopics (kt)
        kafkausers (ku)
        kafkabridges      (kb)
        kafkaconnectors   (kctr)
        kafkaconnects     (kc)
        kafkamirrormaker2s(kmm2)
        kafkamirrormakers (kmm)
        kafkarebalances   (kr)
    nats: #?? -> supports multi-tenancy


observability:
    logging:
        collect+process: flow
        output: output
        dashboard: grafanadashboard(!!add org)
        alert: #?? (on dashboard?)
    monitoring:
        collect: PodMoniotor, ServiceMonitor (annotation?) # port name with annotation ??
        alert: PrometheusRule, AlertmanagerConfig
        dashboard:  GrafanaDashboard
        grafanauser?? (integrate with k8s rbacs !!grafana create users after login! (fake login?))
    tracing: #??

CD:
    gitops:
        Application (app): # namespaced
        appset:
        argocdusers?? (integrate with k8s rbac, though how to map appproj->ns?)

Policy:
    rbac:
        user:  ## refrence only
        group: ## refrence only
        rolebinding: ## first only predefined roles
        role:
        sa: # predefined sa: monitoring-datasource, image-pusher #?? ,
        additional roles:
        - grafanaUser
        - argocdUser
        - logging (integrated)
    netpol:
    limit:
    quota:
    integration:
        - oidc (with dex)
        - kube-rbac-proxy
        - openshift-oauth-proxy
        - any oidc proxy??

# - apiGroup: rbac.authorization.k8s.io
#   kind: User
#   name: sadegh.tabasi



Advanced:

IaaS (kubevirt):

istio:
    VirtualService
    DestinationRule
    ServiceEntry
    Gateway
-----------------------------------------
karmada: (doesn't need some high load managemnts):
- pods
- endpoints/endpointslices/ciliumendpoints
- events? (aggregate?)
