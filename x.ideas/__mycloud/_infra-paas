##########################
Golang code:
Test files:
Container image: Dockerfile
Package: Helm
CI:
---
workload:
    run: deployment, sts, ds?? (admin)
    batch: cj, argoproj/rollouts, volcano
    scale: hpa, vpa -> faas maybe help on this
    configure: cm, secret
    resiliency: pdb -> operator
network:
    l4: svc, virtualService
    http: ingress, gateway, smi
    multi-region: gslb

storage:
    volume:
        PersistentVolumeClaim
        VolumeSnapshot
        VolumeSnapshotGroup
    s3:
        Bucket (cosi?)
        ## todo: s3 api should be modified for creating buckets, creating users, etc -> cosi -> how to extract accesskey, secretkey, bucketname
    operated-db:
        pg:
        mysql: #??
        es: #?? -->
        redis:
        mongo: #??
        tidb: #??
    oci-registry:
        is:
    db:
        sql: create only a CR, and jump to use sql.teh-1.snappcloud.io #??
        kv: create only a CR, and jump to use kv.teh-1.snappcloud.io #??
mq:
    rabbitmq:
    kafka:
    nats: #?? -> supports multi-tenancy

observability:
    logging:
        collect: annotation? (retention day)
        process: #??
        dashboard: #??
        alert: #??
        # ---
        foward: ClusterLogForwarding ###?? namespaced with banzai-cloud logging?
        # --- banzai
        # Logging #?/
        # Output
        # Flow
    monitoring:
        collect: PodMoniotor, ServiceMonitor (annotation?) # port name with annotation ??
        alert: PrometheusRule, AlertmanagerConfig
        dashboard:  GrafanaDashboard
    tracing: #??

CD:
    gitops:
        Application: # namespaced
        appset:

Policy:
    rbac:
        user:  ## refrence only
        group: ## refrence only
        rolebinding: ## first only predefined roles
        role:
        sa: # predefined sa: monitoring-datasource, image-pusher #?? ,
    netpol:
    limit:
    quota:
    integration:
        - oidc (with dex)
        - kube-rbac-proxy
        - openshift-oauth-proxy
        - any oidc proxy??

# - apiGroup: rbac.authorization.k8s.io
#   kind: User
#   name: sadegh.tabasi



Advanced:

IaaS (kubevirt):

istio:
    VirtualService
    DestinationRule
    ServiceEntry
    Gateway
