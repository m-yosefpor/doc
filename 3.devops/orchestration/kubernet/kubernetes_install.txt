https://stackoverflow.com/questions/53383994/error-marking-master-timed-out-waiting-for-the-condition-kubernetes/53410468#53410468
https://www.edureka.co/blog/install-kubernetes-on-ubuntu


Sudo Su
sudo apt update


# turn off swap
	swapoff -a
	sudo vim /etc/fstab
	#comment the swap line


#update the hosts name
	/etc/hosts

#set static IP
	/etc/network/interfaces
	auto enp0s8
	iface enp0s8 inet static address <IP>


#install docker
	sudo apt install docker.io

# start and enable docker
	systemctl enable docker && systemctl start docker



#cni plugin
	CNI_VERSION="v0.6.0"
	mkdir -p /opt/cni/bin
	curl -L "https://github.com/containernetworking/plugins/releases/download/${CNI_VERSION}/cni-plugins-amd64-${CNI_VERSION}.tgz" | tar -C /opt/cni/bin -xz


#Install kubeadm, kubelet, kubectl
    RELEASE="$(curl -sSL https://dl.k8s.io/release/stable.txt)"
	mkdir -p /opt/bin
	cd /opt/bin
	curl -LO https://storage.googleapis.com/kubernetes-release/release/`curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt`/bin/linux/amd64/kubectl
	curl -LO https://storage.googleapis.com/kubernetes-release/release/`curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt`/bin/linux/amd64/kubelet
	curl -LO https://storage.googleapis.com/kubernetes-release/release/`curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt`/bin/linux/amd64/kubeadm
	chmod +x {kubeadm,kubelet,kubectl}
     --------or--------
	# repo of kubernetese for ubuntu-xenial
	sudo apt install apt-transport-https curl
	curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add -
	cat <<EOF >/etc/apt/resources.list.d/kubernetes.list deb http://apt.kubernetes.io/ kubernetes-xenial main
	EOF
	sudo apt update
	sudo apt install kubelet kubeadm kubectl
   


# create k8s systemd service
	curl -sSL "https://raw.githubusercontent.com/kubernetes/kubernetes/master/build/debs/kubelet.service" | sed "s:/usr/bin:/opt/bin:g" > /etc/systemd/system/kubelet.service
	mkdir -p /etc/systemd/system/kubelet.service.d
	curl -sSL "https://raw.githubusercontent.com/kubernetes/kubernetes/master/build/debs/10-kubeadm.conf" | sed "s:/usr/bin:/opt/bin:g" > /etc/systemd/system/kubelet.service.d/10-kubeadm.conf
    -------- or --------------------
	vim /etc/systemd/system/kubelet.service.d/10-kubeadm.conf
	#Environment="cgroup-driver=systemd/cgroup-driver=cgroupfs"
	
# start and enable kubelet
	systemctl enable kubelet && systemctl start kubelet   # ?????????? /var/lib/kubelet files are generated by join, so don't use them on worker
	systemctl status kubelet





---------------
(only master)


# api server, network
	(if previously configured): kubeadm reset -f && rm -rf /etc/kubernetes /var/lib/etcd $HOME/.kube/config
	kubeadm init --pod-network-cidr={$CNI address} --apiserver-advertise-address={$IP_master} # Calico CNI: 192.168.0.0/16 , Flannel CNI : 10.244.0.0/16
   
#conifg kubectl
	mkdir -p $HOME/.kube
	sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
	sudo chown $(id -g) $HOME/.kube/config


#test
	kubectl get nodes
	kubectl get pods --all-namespaces
    #must see
		kube-system   coredns-576cbf47c7-4x7zq             0/1     Running   0          36m
		kube-system   coredns-576cbf47c7-666jm             0/1     Running   0          36m
		kube-system   etcd-centos-7-5                      1/1     Running   0          35m
		kube-system   kube-apiserver-centos-7-5            1/1     Running   0          35m
		kube-system   kube-controller-manager-centos-7-5   1/1     Running   0          35m
		kube-system   kube-proxy-pcgw8                     1/1     Running   0          36m
		kube-system   kube-scheduler-centos-7-5            1/1     Running   


	kubectl cluster-info

#(if test not ok): kubectl describe pods -A #check the logs
	
	
## pod network??
    (flannel):
		kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml
		sysctl net.bridge.bridge-nf-call-iptables=1
    (calico):
		kubectl apply -f https://docs.projectcalico.org/v3.8/manifests/calico.yaml


# test
kube-system   coredns-576cbf47c7-4x7zq             0/1     Running   0          36m
		kube-system   coredns-576cbf47c7-666jm             1/1     Running   0          36m
		kube-system   etcd-centos-7-5                      1/1     Running   0          35m
		kube-system   kube-apiserver-centos-7-5            1/1     Running   0          35m
		kube-system   kube-controller-manager-centos-7-5   1/1     Running   0          35m
		kube-system   kube-flannel-ds-amd64-2bmw9          1/1     Running   0          33m
		kube-system   kube-proxy-pcgw8                     1/1     Running   0          36m
		kube-system   kube-scheduler-centos-7-5            1/1     Running   

## dashboard
	kubectl apply -f https://raw.githubusercontent.com/kubernetes/dashboard/v2.0.0-beta8/aio/deploy/recommended.yaml
    kubectl proxy --address='0.0.0.0' --accept-hosts='^*$'
	
## check dashboard
	(enter:) http://192.168.1.21:8001/api/v1/namespaces/kubernetes-dashboard/services/https:kubernetes-dashboard:/proxy/#/login
	
	

##


#kubectl create serviceaccount dashboard -n default
#kubectl create serviceaccount dashboard -n kubernetes-dashboard

kubectl create clusterrolebinding dashboard-admin -n defualt --clusterrole=cluster-admin --serviceaccount=default:dashboard


# token
kubectl get secret $(kubectl get serviceaccount dashboard -o jsonpath="{.secrets[0].name}") -o jsonpath="{.data.token}" | base64 --decode


#login to dashboard

	(enter:) http://192.168.1.21:8001/api/v1/namespaces/kubernetes-dashboard/services/https:kubernetes-dashboard:/proxy/#/login




--------------
(node only)
	sudo kubeadm join $IP_MASTER --token .jlkjkljk --descovery-token-ca-cert-hash sha256:jasfkjajfaskljfkafjkajflkj
	sudo kubeadm join --apiserver-advertise-address=<ip-address-of-the master> --pod-network-cidr=192.168.0.0/16
     